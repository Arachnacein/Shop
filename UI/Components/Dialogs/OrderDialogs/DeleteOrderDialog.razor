@inject HttpClient httpClient
@using System.Net
@using System.Collections.Generic

<MudDialog>
    <DialogContent>
        Czy na pewno chcesz usunąć zamówienie nr. <b>@DialogModel.Id</b>?
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit">Tak</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Cancel">Anuluj</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Inject] private ISnackbar Snackbar { get; set; }
    private ProductViewModel DialogModel { get; set; }

    [Parameter] public int ProductId { get; set; }
    [Parameter] public Func<Task> OnSuccess { get; set; }

    protected override void OnInitialized()
    {
        DialogModel = new ProductViewModel()
        {
            Id = ProductId
        };
    }

    private async Task Submit()
    {
        var result = await httpClient.DeleteAsync($"/api/order/{DialogModel.Id}");
        if(result.StatusCode == HttpStatusCode.NoContent)
        {
            Snackbar.Add($"Pomyślnie usunięto zamówienie.", Severity.Info);
            MudDialog.Cancel();
            if(OnSuccess != null)
                await OnSuccess.Invoke();
        }
        else
            Snackbar.Add($"Coś poszło nie tak.", Severity.Warning);
    }
    private void Cancel() => MudDialog.Cancel();
}