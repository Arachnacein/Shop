@inject HttpClient httpClient
@using System.Net
@using System.Collections.Generic

<MudDialog>
    <DialogContent>
        Dodawanie nowego klienta
        <MudTextField Label="Imię" @bind-Value="DialogModel.Name" />
        <MudTextField Label="Nazwisko" @bind-Value="DialogModel.Surname" />
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit">Dodaj</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Cancel">Anuluj</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Inject] private ISnackbar Snackbar { get; set; }
    [Parameter] public Func<Task> OnSuccess { get; set; }
    private ClientViewModel DialogModel = new ClientViewModel();

    protected override void OnInitialized()
    {
        DialogModel.Name = string.Empty;
        DialogModel.Surname = string.Empty;
    }

    private async Task Submit()
    {
        var result = await httpClient.PostAsJsonAsync<ClientViewModel>($"/api/client", DialogModel);
        if(result.StatusCode == HttpStatusCode.Created)
        {
            Snackbar.Add("Pomyślnie dodano klienta.", Severity.Info);
            MudDialog.Cancel();
            if(OnSuccess != null)
                await OnSuccess.Invoke();
        }
        else
            Snackbar.Add($"Coś poszło nie tak.", Severity.Warning);
    }
    void Cancel() => MudDialog.Cancel();
}